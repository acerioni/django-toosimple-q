name: test

on: [push]

jobs:
  test:

    name: Tests py${{ matrix.python-version }} / dj${{ matrix.django-version }} / ${{ matrix.db-backend }} [${{ matrix.os }}]

    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os:
        - "ubuntu-latest"
        - "windows-2019"
        python-version:
        - "3.8"
        - "3.9"
        - "3.10"
        django-version:
        - "3.2"
        - "4.0"
        db-backend:
        - "sqlite"
        - "postgres"
      fail-fast: false

    steps:
    - uses: actions/checkout@v1
    - name: Install postgres
      if: ${{ matrix.db-backend }} == 'postgres'
      run: docker run -p 5432:5432 -e POSTGRES_PASSWORD=postgres --name postgres -d postgres
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v1
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install pip
      run: |
        python -m pip install --upgrade pip
    - name: Install Django ${{ matrix.django-version }}
      env:
        DJANGO_VERSION: ${{ matrix.django-version }}
      run: |
        python -m pip install Django~=$DJANGO_VERSION
    - name: Install dependencies
      run: pip install -r requirements-dev.txt
    - name: Lint with pre-commit
      uses: pre-commit/action@v2.0.2
    - name: Waiting for postgres
      if: ${{ matrix.db-backend }} == 'postgres'
      run: docker exec postgres pg_isready
    - name: Test
      env:
        TOOSIMPLEQ_TEST_DB: ${{ matrix.db-backend }}
      run: |
        python manage.py test
