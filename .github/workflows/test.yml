name: test

on:
  push:
    branches:
      - master
  pull_request:
  schedule:
    - cron: "0 0 * * 0" # weekly

jobs:
  test:
    name: Tests dj${{ matrix.dj }} / ${{ matrix.db }} / py${{ matrix.py }}

    strategy:
      # all supported django version on lowest/highest supported python
      # see https://docs.djangoproject.com/en/4.1/faq/install/#what-python-version-can-i-use-with-django
      matrix:
        include:
          - { os: "ubuntu-latest", dj: "3.2", db: "sqlite", py: "3.6" }
          - { os: "ubuntu-latest", dj: "3.2", db: "sqlite", py: "3.10" }
          - { os: "ubuntu-latest", dj: "3.2", db: "postgres", py: "3.6" }
          - { os: "ubuntu-latest", dj: "3.2", db: "postgres", py: "3.10" }
          - { os: "ubuntu-latest", dj: "4.0", db: "sqlite", py: "3.8" }
          - { os: "ubuntu-latest", dj: "4.0", db: "sqlite", py: "3.10" }
          - { os: "ubuntu-latest", dj: "4.0", db: "postgres", py: "3.8" }
          - { os: "ubuntu-latest", dj: "4.0", db: "postgres", py: "3.10" }
          - { os: "ubuntu-latest", dj: "4.1", db: "sqlite", py: "3.8" }
          - { os: "ubuntu-latest", dj: "4.1", db: "sqlite", py: "3.11" }
          - { os: "ubuntu-latest", dj: "4.1", db: "postgres", py: "3.8" }
          - { os: "ubuntu-latest", dj: "4.1", db: "postgres", py: "3.11" }
          - { os: "windows-latest", dj: "4.1", db: "postgres", py: "3.11-windowsservercore" }
      fail-fast: false

    runs-on: ${{ matrix.os }}

    env:
      TOOSIMPLEQ_DJ_VERSION: ${{ matrix.dj }}
      TOOSIMPLEQ_PY_VERSION: ${{ matrix.py }}
      TOOSIMPLEQ_TEST_DB: ${{ matrix.db }}

    steps:
      - name: Set git to use LF
        run: |
          git config --global core.autocrlf false
          git config --global core.eol lf

      - uses: actions/checkout@v2

      - name: Lint with pre-commit
        uses: pre-commit/action@v2.0.2

      - name: Docker build
        run: docker compose build

      - name: Run tests
        run: docker compose run django test
